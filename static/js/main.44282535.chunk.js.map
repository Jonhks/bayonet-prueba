{"version":3,"sources":["Components/Menu/Menu.js","Components/Footer/Footer.js","Components/Cards/Cards.js","hook/useFetch.js","Components/Loading/Loading.js","Components/Grafica/Grafica.js","Components/Principales/Principales.js","pages/home.js","pages/actividad.js","pages/error404.js","serviceWorker.js","index.js","App.js"],"names":["className","theme","mode","defaultSelectedKeys","style","lineHeight","Item","key","to","Footer","Layout","props","repo","lenguaje","language","background","padding","title","full_name","bordered","width","owner","login","forks","score","url","options","useState","loading","setLoading","result","setResult","error","setError","useEffect","a","fetch","res","json","size","data","items","languages","map","item","filter","element","console","log","dataGrafic","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","maintainAspectRatio","value","useFetch","span","textAlign","marginTop","fontZise","fontWeigth","id","Cards","SelectComponent","Option","Select","setValue","offset","showSearch","left","placeholder","optionFilterProp","onChange","event","filterOption","input","option","children","toLowerCase","indexOf","status","subTitle","extra","type","Boolean","window","location","hostname","match","ReactDOM","render","Header","Content","zIndex","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44282535.chunk.js","sourcesContent":["import React from 'react';\nimport {Menu} from 'antd'\nimport {Link} from 'react-router-dom'\n// import {ReactComponent as Logo} from '../../assets/img/logo.svg'\n\n\nimport './Menu.sass'\n\n\nexport default () => {\n  return (\n    <div className=\"menu-top\">\n      <div className=\"menu-top__logo\">\n        {/* <Logo /> */}\n      </div>\n      <Menu theme=\"dark\" \n        mode=\"horizontal\"\n        defaultSelectedKeys={[\"1\"]}\n        style={{lineHeight: \"64px\"}}\n      >\n      <Menu.Item key=\"1\">\n        <Link to =\"/\">Home</Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Link to =\"/actividad\">Actividad</Link>\n      </Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport { Layout } from 'antd'\n \nimport './Footer.sass'\n\nexport default () => {\n  const { Footer } = Layout\n  return (\n    <Footer className=\"footer\">\n      <p> Bayonet Github-Api </p>\n    </Footer>\n  )\n}","import React from 'react'\nimport { Card } from 'antd';\n\n\n\nexport default (props) => {\n  const { repo } = props\n  const lenguaje = repo.language || \"Sin lenguaje\"\n  return (\n    <div style={{ background: '#ECECEC', padding: '20px' }}>\n      <Card title={repo.full_name} bordered={false} style={{ width: 300 }}>\n        <p>Usuario: {repo.owner.login}</p>\n        <p>Lenguaje: {lenguaje}</p>\n        <p>Forks: {repo.forks}</p>\n        <p>Score: {repo.score}</p>\n      </Card>\n    </div>\n  )\n}","import {useState, useEffect} from 'react'\n\nexport default (url, options) => {\n  const [loading, setLoading] = useState(true)\n  const [result, setResult] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(()=>{\n    (async() => {\n      try{\n        const res = await fetch(url, options)\n        const json = await res.json()\n        setResult(json)\n        setLoading(false)\n      } catch (err) { \n        setError(err)\n        setLoading(false)\n      }\n    })()\n  }, [options, url])\n  return {loading, result, error}\n}","import React from 'react';\nimport { Spin } from 'antd'\n\nimport './Loading.sass'\n\n\nexport default () => {\n  return (\n    <div className=\"loading\"> \n      <Spin size=\"large\"/>\n      <p>Cargando...</p>\n    </div>\n  )\n}","import React from 'react'\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\n\nimport './Grafica.sass'\n\nexport default (props) => {\n  const { data } = props\n  let items = [\"1\", \"2\"]\n  let languages = ''\n\n  if(!data) {\n    console.log('aun no hay data')  \n  } else {\n     items = data.items.map( item  => item.score)\n     languages = data.items.map( item  => item.language ).filter( element => element != null)\n     if(items[0] === 1 ){\n      items = data.items.map( item  => item.forks)\n      languages = data.items.map( item  => item.owner.login )\n      // .filter( element => element != null)\n     }\n  }\n\n  \n\n\n  const dataGrafic = {\n    labels: languages,\n    datasets: [\n      {\n        label: 'Populares',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: items\n      }\n    ]\n  };\n  \n\n  return (\n    <>\n      <div className=\"grafica\">\n        <Line\n          data={dataGrafic}\n          width={1}\n          options={{ maintainAspectRatio: false }}\n        /> \n     </div>\n    </>\n  )\n}","import React from 'react';\nimport { Col, Row } from 'antd'\nimport Cards from '../Cards'\nimport useFetch from '../../hook/useFetch'\nimport Loading from '../Loading'\nimport Grafica from '../Grafica'\n\n\nimport './Principales.sass'\n\nexport default (props) => {\n  \n  let data = 'Todos'\n  \n  const { value } = props\n\n  if (value === 'Todos') {\n    const bestRepos = useFetch('https://api.github.com/search/repositories?q=sort=stars&order=desc')\n    data = bestRepos.result\n    // setData(value)\n  } else {\n  const bestRepos = useFetch(`https://api.github.com/search/repositories?q=language:${value}&sort=stars&order=desc`)\n  data = bestRepos.result\n  }\n\nreturn (\n  <Row>\n  <Col span={24} style={{ textAlign: \"center\", marginTop:25 }}>\n    <h1 style={{fontZise: 35, fontWeigth: \"bold\"}} >\n      Repositorios mas populares\n    </h1>\n  </Col>\n  {data == null ? (\n    <Row>\n      <Col span={24}><Loading /></Col>\n    </Row>\n   ) : ( \n     <Row>\n      <Row>\n      <Col>\n        <Grafica data ={data}/>\n      </Col>\n      </Row>\n     {data.items.map(repo=>(\n      <Col key={repo.id} span={8} className=\"card-repo\">\n        <Cards repo={repo} />\n      </Col>\n      ))}\n    </Row>\n  )}\n</Row>\n)\n\n}","import React, {useState} from 'react';\nimport { Row, Col } from 'antd'\nimport Footer from '../Components/Footer'\nimport Principales from '../Components/Principales'\n// import useFetch from '../hook/useFetch'\n// import Grafica from '../Components/Grafica'\n// import SelectComponent from '../Components/SelectComponent'\nimport { Select } from 'antd';\n\n\n\n\nexport default  () => {\n  // const {seleccion } = props\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n         <SelectComponent />\n        </Col>\n      </Row>\n      <Footer />\n    </>\n    )\n    \n  }\n\n\n  const SelectComponent = () => {\n  const { Option } = Select;\n\n  const [value, setValue] = useState('Todos')\n    \n    return (\n      <>\n      <Row>\n        <Col span={4} offset={20}>\n          <Select\n            showSearch\n            style={{ width: 200 , left: 0}}\n            placeholder=\"Select a language\"\n            optionFilterProp=\"children\"\n            onChange={(event) => {\n              setValue(event)\n            }}\n            filterOption={(input, option) =>\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Todos\">Todos</Option>\n            <Option value=\"Javascript\">JavaScript</Option>\n            <Option value=\"Go\">Go</Option>\n            <Option value=\"Ruby\">Ruby</Option>\n            <Option value=\"Python\">Python</Option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Principales value={value} />\n      </Row>\n      </>\n    )\n  }\n","import React from 'react'\nimport { Row, Col } from 'antd'\nimport Footer from '../Components/Footer'\n\nexport default  () => {\n\n\n  return (\n    <>\n      <Row>\n        <Col span={12}>\n          Actividad\n        </Col>\n        <Col span={12}>\n          Actividad\n        </Col>\n      </Row>\n      <Footer/>\n    </>\n  )\n}\n","import React from 'react';\nimport { Result, Button } from 'antd';\nimport {Link} from 'react-router-dom'\n\nimport '../index.css'\n\nexport default () => {\n    return <Result \n    className=\"error404-container\"\n    status=\"404\" \n    title=\"404\" \n    subTitle=\"Sorry, the page you visited does not exist.\"\n      extra={ <Link to =\"/\"> <Button type=\"primary\"> Home</Button></Link>}\n    />\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {Layout} from 'antd'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n// Componentes\nimport Menu from './Components/Menu'\n\n\n// Pages\nimport Home from './pages/home'\nimport Actividad from './pages/actividad'\nimport Error404 from './pages/error404'\n\n\n\nexport default function App() {\n  const {Header, Content} = Layout\n  return (\n    <Layout>\n      <Router>\n       <Header style={{ zIndex: 1 }}>\n         <Menu />\n       </Header>\n      <Content> \n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <Home />\n          </Route>  \n          <Route path=\"/actividad\" exact={true}>\n            <Actividad />\n          </Route>        \n          <Route path=\"*\" >\n            <Error404 />\n          </Route>\n        </Switch>\n      </Content>\n      </Router>\n    </Layout>\n  );\n}\n\n\n"],"sourceRoot":""}